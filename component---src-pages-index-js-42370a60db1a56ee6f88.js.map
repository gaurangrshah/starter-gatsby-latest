{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","data","allStrapiSection","edges","homeHero","homeAuthority","pageTagline","fluid","overflow","component","hero","heroContent","alignItems","shadow","heroBlock","config","heading","border","tagline","fontSize","link","isDefault","isMoreLink","node","block","pattern","py","rounded","color","bg","textAlign","misc","mx","w","content","responsive","center","flexWrap","order","my","test","cards","map","card","i","key","flexbasis","CARD_WIDTH","maxW","CARD_WIDTH_LG","minH","text","p","query"],"mappings":"2FAAA,8FA8FeA,UA3EG,SAAC,GAAc,IAAD,cAAXC,KAC+BC,iBAAiBC,MAA5DC,EADuB,KACbC,EADa,UAG9B,OACE,kBAAC,IAAD,CAAeC,YAAa,IAC1B,kBAAC,IAAD,CAAeC,OAAK,EAACC,SAAS,UAC5B,kBAAC,IAAoBC,IAAUC,MAC/B,kBAAC,IAAD,eAAKH,OAAK,GAAKE,IAAUE,aACvB,kBAAC,IAAD,eACEJ,OAAK,EACLK,WAAW,aACXC,QAAM,GACFJ,IAAUK,UAJhB,CAKEC,OAAQ,CACNC,QAAS,CAAEC,QAAQ,GACnBC,QAAS,CAAED,QAAQ,EAAME,SAAU,MACnCC,KAAM,CACJC,WAAW,EACXC,YAAY,KAGZlB,EAASmB,KAAKC,MAAMA,UAI9B,kBAAC,IAAD,CAAejB,OAAK,EAACkB,SAAO,EAACC,GAAI,IAC/B,kBAAC,IAAD,CAASb,QAAM,EAACc,SAAO,EAACC,MAAM,MAAMC,GAAG,cACrC,kBAAC,IAAD,eACEtB,OAAK,EACLQ,OAAQ,CACNC,QAAS,CAAEc,UAAW,UACtBC,KAAM,CACJC,GAAI,OACJC,EAAG,CAAC,MAAO,KAAM,KAAM,OACvBH,UAAW,UAEbI,QAAS,CACPD,EAAG,CAAC,MAAO,KAAM,KAAM,OACvBD,GAAI,SAGRF,UAAU,QACNzB,SAfN,UAeMA,EAAekB,YAfrB,iBAeM,EAAqBC,aAf3B,aAeM,EAA4BA,OAEhC,kBAAC,IAAD,eACEjB,OAAK,EACL4B,YAAU,EACVC,QAAM,EACNC,SAAS,OACTC,MAAO,EACPC,GAAI,GACJX,MAAM,cACFY,eAEHnC,SAVH,UAUGA,EAAekB,YAVlB,iBAUG,EAAqBC,aAVxB,iBAUG,EAA4BiB,aAV/B,aAUG,EAAmCC,KAAI,SAACC,EAAMC,GAAP,OACtC,kBAAC,IAAD,eACEC,IAAKD,EACLE,UAAWC,IACXC,KAAMC,IACNC,KAAK,QACLnC,OAAQ,CACNoC,KAAM,CAAElC,QAAQ,GAChBG,KAAM,CAAEgC,EAAG,KAETT,aAaf,IAAMU,EAAK","file":"component---src-pages-index-js-42370a60db1a56ee6f88.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Flex, SimpleGrid } from \"@chakra-ui/core\"\n\nimport DefaultLayout from \"../gatsby-plugin-chakra-ui/layouts/default\"\n\nimport {\n  test,\n  CARD_WIDTH,\n  CARD_WIDTH_LG,\n  component,\n  BackgroundImage,\n  BaseContainer,\n  Block,\n  Content,\n  Row,\n  SimpleCard,\n} from \"../components\"\n\nconst IndexPage = ({ data }) => {\n  const [homeHero, homeAuthority, preFooter] = data.allStrapiSection.edges\n  // console.log(data.allStrapiSection.edges)\n  return (\n    <DefaultLayout pageTagline={\"\"}>\n      <BaseContainer fluid overflow=\"hidden\">\n        <BackgroundImage {...component.hero} />\n        <Row fluid {...component.heroContent}>\n          <Block\n            fluid\n            alignItems=\"flex-start\"\n            shadow\n            {...component.heroBlock}\n            config={{\n              heading: { border: true },\n              tagline: { border: true, fontSize: \"xl\" },\n              link: {\n                isDefault: false,\n                isMoreLink: true,\n              },\n            }}\n            {...homeHero.node.block.block}\n          />\n        </Row>\n      </BaseContainer>\n      <BaseContainer fluid pattern py={12}>\n        <Content shadow rounded color=\"bg4\" bg=\"background\">\n          <Block\n            fluid\n            config={{\n              heading: { textAlign: \"center\" },\n              misc: {\n                mx: \"auto\",\n                w: [\"90%\", null, null, \"60%\"],\n                textAlign: \"center\",\n              },\n              content: {\n                w: [\"90%\", null, null, \"70%\"],\n                mx: \"auto\",\n              },\n            }}\n            textAlign=\"left\"\n            {...homeAuthority?.node?.block?.block}\n          >\n            <Row\n              fluid\n              responsive\n              center\n              flexWrap=\"wrap\"\n              order={5}\n              my={12}\n              color=\"background\"\n              {...test()}\n            >\n              {homeAuthority?.node?.block?.cards?.map((card, i) => (\n                <SimpleCard\n                  key={i}\n                  flexbasis={CARD_WIDTH}\n                  maxW={CARD_WIDTH_LG}\n                  minH=\"250px\"\n                  config={{\n                    text: { border: true },\n                    link: { p: 3 },\n                  }}\n                  {...card}\n                />\n              ))}\n            </Row>\n          </Block>\n        </Content>\n      </BaseContainer>\n    </DefaultLayout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query HomeQueryBasic {\n    allStrapiSection(\n      filter: { pages: { elemMatch: { name: { eq: \"home\" } } } }\n    ) {\n      edges {\n        node {\n          name\n          order\n          block {\n            name\n            block {\n              text {\n                text\n                type\n                order\n              }\n              content {\n                content\n              }\n              image {\n                alternativeText\n                name\n                height\n                width\n                formats {\n                  large {\n                    url\n                    size\n                    name\n                  }\n                  medium {\n                    url\n                    size\n                    name\n                  }\n                }\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n            }\n            cards {\n              text {\n                text\n                type\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              icon\n              content {\n                content\n              }\n            }\n            addons {\n              city\n              email\n              id\n              phone\n              state\n              streetAddress\n              suite\n              zip\n            }\n          }\n          pages {\n            name\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
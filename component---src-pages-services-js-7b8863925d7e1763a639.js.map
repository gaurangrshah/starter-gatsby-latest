{"version":3,"sources":["webpack:///./src/pages/services.js"],"names":["ServicesPage","data","servicesHero","allStrapiSection","edges","services","pageTagline","fluid","overflow","h","component","hero","content","flexDirection","alignItems","mr","mt","w","color","textAlign","position","justifyContent","p","shadow","mx","config","heading","border","tagline","fontSize","link","isDefault","isMoreLink","node","block","display","ml","flexWrap","test","cards","map","card","i","key","truncate","as","Box","icon","pattern","padding","main","order","misc","center","my","flexGrow","minH","constants","CARD_WIDTH","m","size","alignSelf","query"],"mappings":"2FAAA,0GAqIeA,UAlHM,SAAC,GAAc,IAAD,EAAXC,EAAW,EAAXA,KAChBC,EAAeD,EAAKE,iBAAiBC,MAAM,GAC3CC,EAAWJ,EAAKE,iBAAiBC,MAAM,GAE7C,OACE,kBAAC,IAAD,CAAeE,YAAa,IAC1B,kBAAC,IAAD,CAAeC,OAAK,EAACC,SAAS,SAASC,EAAE,QACvC,kBAAC,IAAoBC,IAAUC,MAC/B,kBAAC,IAAD,eACEJ,OAAK,GACDG,IAAUC,KAAKC,QAFrB,CAGEC,cAAc,SACdC,WAAW,aACXC,GAAI,CAAC,GAAI,KAAM,KAAM,IACrBC,GAAI,CAAC,EAAG,MAAO,KAAM,IACrBC,EAAE,SAEF,kBAAC,IAAD,CACEV,OAAK,EACLW,OAAK,EACLC,UAAU,QACVC,SAAS,WACTC,eAAe,WACfC,EAAG,EACHP,GAAI,GAEJ,kBAAC,IAAD,eACER,OAAK,EACLgB,QAAM,EACNH,SAAS,WACTI,GAAI,EACJC,OAAQ,CACNC,QAAS,CAAEC,QAAQ,GACnBC,QAAS,CAAED,QAAQ,EAAME,SAAU,MACnCC,KAAM,CACJC,WAAW,EACXC,YAAY,KAGZ9B,EAAa+B,KAAKC,MAAMA,SAGhC,kBAAC,IAAD,mBACEC,QAAS,CAAC,OAAQ,KAAM,KAAM,QAG9BlB,EAAG,CAAC,KAAM,MAAO,KAAM,MAAO,QAE9BF,GAAI,EACJqB,GAAI,IAPN,GAQK,OARL,EASEf,eAAe,WATjB,EAUEgB,SAAS,SAVX,GAWMC,eAEHpC,EAAa+B,KAAKC,MAAMK,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACjC,kBAAC,IAAD,eACEC,IAAKD,EACLzB,EAAG,CAAC,MAAO,MAAO,KAAM,MACxB2B,SAAU,IACNH,EAJN,CAKEhB,OAAQ,CACNK,KAAM,CAAEe,GAAIC,IAAKxB,EAAG,GACpByB,KAAM,CAAE7B,MAAO,aACfQ,QAAS,CAAEG,SAAU,CAAC,KAAM,KAAM,KAAM,KAAM,QAC9CjB,QAAS,CAAEuB,QAAS,CAAC,OAAQ,KAAM,KAAM,oBAOrD,kBAAC,IAAD,eAAe5B,OAAK,EAACyC,SAAO,GAAKC,IAAQC,MACvC,kBAAC,IAAD,CAAS9B,SAAS,WAAWI,GAAG,OAAOL,UAAU,UAC/C,kBAAC,IAAD,eACEC,SAAS,YACLf,EAAS4B,KAAKC,MAAMA,MAF1B,CAGET,OAAQ,CACNC,QAAS,CAAEG,SAAU,MAAOsB,MAAO,GACnCC,KAAM,CAAED,MAAO,MAGjB,kBAAC,IAAD,CAAK5C,OAAK,EAAC8C,QAAM,EAAChB,SAAS,OAAOc,MAAO,EAAGG,GAAI,IAC7CjD,EAAS4B,KAAKC,MAAMK,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAC7B,kBAAC,IAAD,eACEC,IAAKD,EACLlB,GAAI,EACJ+B,SAAU,EACVtC,EAAG,CAAC,OAAQ,MAAO,OACnBuC,KAAI,OAAEC,UAAF,IAAEA,SAAF,EAAEA,IAAWC,WACjBC,EAAG,EACHZ,MAAI,EACJtB,OAAQ,CACNC,QAAS,CAAEmB,GAAI,KAAMhB,SAAU,CAAC,KAAM,KAAM,KAAM,QAClDC,KAAM,CACJR,EAAG,MACHS,WAAW,EACXC,YAAY,EACZ4B,KAAM,KACN5C,GAAI,EACJ6C,UAAW,cAGXpB,aAaf,IAAMqB,EAAK","file":"component---src-pages-services-js-7b8863925d7e1763a639.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Box } from \"@chakra-ui/core\"\n\nimport DefaultLayout from \"../gatsby-plugin-chakra-ui/layouts/default\"\n\nimport {\n  test,\n  padding,\n  constants,\n  component,\n  BackgroundImage,\n  BaseContainer,\n  Block,\n  Content,\n  Row,\n  FlexCard,\n} from \"../components\"\n\nconst ServicesPage = ({ data }) => {\n  const servicesHero = data.allStrapiSection.edges[1]\n  const services = data.allStrapiSection.edges[2]\n\n  return (\n    <DefaultLayout pageTagline={\"\"}>\n      <BaseContainer fluid overflow=\"hidden\" h=\"auto\">\n        <BackgroundImage {...component.hero} />\n        <Row\n          fluid\n          {...component.hero.content}\n          flexDirection=\"column\"\n          alignItems=\"flex-start\"\n          mr={[12, null, null, 12 * 4]}\n          mt={[6, \"20%\", null, 12 * 2]}\n          w=\"100%\"\n        >\n          <Row\n            fluid\n            color\n            textAlign=\"right\"\n            position=\"relative\"\n            justifyContent=\"flex-end\"\n            p={0}\n            mr={0}\n          >\n            <Block\n              fluid\n              shadow\n              position=\"relative\"\n              mx={0}\n              config={{\n                heading: { border: true },\n                tagline: { border: true, fontSize: \"xl\" },\n                link: {\n                  isDefault: false,\n                  isMoreLink: true,\n                },\n              }}\n              {...servicesHero.node.block.block}\n            />\n          </Row>\n          <Row\n            display={[\"none\", null, null, \"flex\"]}\n            // fluid\n            // responsive\n            w={[null, \"70%\", null, \"80%\", \"100%\"]}\n            // mx={3}\n            mr={0}\n            ml={0}\n            ml=\"auto\"\n            justifyContent=\"flex-end\"\n            flexWrap=\"nowrap\"\n            {...test()}\n          >\n            {servicesHero.node.block.cards.map((card, i) => (\n              <FlexCard\n                key={i}\n                w={[\"50%\", \"30%\", null, null]}\n                truncate={80}\n                {...card}\n                config={{\n                  link: { as: Box, p: 3 },\n                  icon: { color: \"lightblue\" },\n                  heading: { fontSize: [\"sm\", \"lg\", null, null, \"2xl\"] },\n                  content: { display: [\"none\", null, null, \"block\"] },\n                }}\n              />\n            ))}\n          </Row>\n        </Row>\n      </BaseContainer>\n      <BaseContainer fluid pattern {...padding.main}>\n        <Content position=\"relative\" mx=\"auto\" textAlign=\"center\">\n          <Block\n            position=\"relative\"\n            {...services.node.block.block}\n            config={{\n              heading: { fontSize: \"2xl\", order: 0 },\n              misc: { order: 1 },\n            }}\n          >\n            <Row fluid center flexWrap=\"wrap\" order={5} my={12}>\n              {services.node.block.cards.map((card, i) => (\n                <FlexCard\n                  key={i}\n                  mx={3} // sets the margin around each card\n                  flexGrow={0}\n                  w={[\"100%\", \"45%\", \"30%\"]}\n                  minH={constants?.CARD_WIDTH}\n                  m={3}\n                  icon\n                  config={{\n                    heading: { as: \"h3\", fontSize: [\"lg\", null, null, \"2xl\"] },\n                    link: {\n                      p: \"1em\",\n                      isDefault: false,\n                      isMoreLink: true,\n                      size: \"xs\",\n                      mt: 6,\n                      alignSelf: \"flex-end\",\n                    },\n                  }}\n                  {...card}\n                />\n              ))}\n            </Row>\n          </Block>\n        </Content>\n      </BaseContainer>\n    </DefaultLayout>\n  )\n}\n\nexport default ServicesPage\n\nexport const query = graphql`\n  query ServicesQueryBasic {\n    allStrapiSection(\n      filter: { pages: { elemMatch: { name: { eq: \"services\" } } } }\n    ) {\n      edges {\n        node {\n          block {\n            block {\n              text {\n                type\n                text\n                order\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              image {\n                alternativeText\n                caption\n                size\n                name\n                formats {\n                  large {\n                    url\n                    width\n                    height\n                  }\n                  medium {\n                    url\n                    width\n                    height\n                  }\n                }\n              }\n              content {\n                content\n              }\n            }\n            cards {\n              text {\n                type\n                text\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              icon\n              content {\n                content\n              }\n            }\n          }\n          name\n          order\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
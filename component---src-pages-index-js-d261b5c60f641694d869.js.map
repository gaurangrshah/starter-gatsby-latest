{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","data","allStrapiSection","edges","homeHero","homeAuthority","seo","siteTitle","siteTagline","fluid","overflow","component","hero","content","shadow","alignItems","block","config","heading","border","tagline","fontSize","link","isDefault","isMoreLink","colorScheme","node","pattern","padding","main","rounded","color","bg","textAlign","misc","mx","w","responsive","center","flexWrap","order","my","cards","map","card","i","key","truncate","flexbasis","constants","CARD_WIDTH_LG","maxH","text","p","query"],"mappings":"2FAAA,8FAqGeA,UAnFG,SAAC,GAAc,IAAD,cAAXC,KACoBC,iBAAiBC,MAAjDC,EADuB,KACbC,EADa,KAE9B,OACE,kBAAC,IAAD,CACEC,IAAK,CAAEC,UAAW,YAAaC,YAAa,kBAE5C,kBAAC,IAAD,CAAeC,OAAK,EAACC,SAAS,UAC5B,kBAAC,IAAoBC,IAAUC,MAC/B,kBAAC,IAAQD,IAAUC,KAAKC,QACtB,kBAAC,IAAD,eACEJ,OAAK,EACLK,QAAM,EACNC,WAAW,cACPJ,IAAUC,KAAKI,MAJrB,CAKEC,OAAQ,CACNC,QAAS,CAAEC,QAAQ,GACnBC,QAAS,CAAED,QAAQ,EAAME,SAAU,MACnCC,KAAM,CACJC,WAAW,EACXC,YAAY,EACZC,YAAa,UAGbrB,EAASsB,KAAKV,MAAMA,UAI9B,kBAAC,IAAD,eAAeP,OAAK,EAACkB,SAAO,GAAKC,IAAQC,MACvC,kBAAC,IAAD,CAAKpB,OAAK,GACR,kBAAC,IAAD,CAASK,QAAM,EAACgB,SAAO,EAACC,MAAM,MAAMC,GAAG,cACrC,kBAAC,IAAD,eACEvB,OAAK,EACLQ,OAAQ,CACNC,QAAS,CAAEe,UAAW,UACtBC,KAAM,CACJC,GAAI,OACJC,EAAG,CAAC,MAAO,KAAM,KAAM,OACvBH,UAAW,UAEbpB,QAAS,CACPuB,EAAG,CAAC,MAAO,KAAM,KAAM,OACvBD,GAAI,SAGRF,UAAU,QACN5B,SAfN,UAeMA,EAAeqB,YAfrB,iBAeM,EAAqBV,aAf3B,aAeM,EAA4BA,OAEhC,kBAAC,IAAD,CACEoB,EAAG,CAAC,OAAQ,KAAM,OAClBC,YAAU,EACVC,QAAM,EACNC,SAAU,CAAC,OAAQ,KAAM,KAAM,UAC/BxB,WAAW,UACXyB,MAAO,EACPC,GAAI,GACJN,GAAG,OACHJ,MAAM,cAEL1B,SAXH,UAWGA,EAAeqB,YAXlB,iBAWG,EAAqBV,aAXxB,iBAWG,EAA4B0B,aAX/B,aAWG,EAAmCC,KAAI,SAACC,EAAMC,GAAP,OACtC,kBAAC,IAAD,eACEC,IAAKD,EACLE,UAAQ,EACRC,UAAS,OAAEC,UAAF,IAAEA,SAAF,EAAEA,IAAWC,cACtBC,KAAK,QACLhB,GAAI,CAAC,OAAQ,KAAM,GACnBM,GAAI,CAAC,GACLxB,OAAQ,CACNC,QAAS,CAAEG,SAAU,CAAC,KAAM,KAAM,OAClC+B,KAAM,CAAEjC,QAAQ,GAChBG,KAAM,CAAE+B,EAAG,KAETT,cAcjB,IAAMU,EAAK","file":"component---src-pages-index-js-d261b5c60f641694d869.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport DefaultLayout from \"../gatsby-plugin-chakra-ui/layouts/default\"\n\nimport {\n  test,\n  padding,\n  constants,\n  component,\n  BackgroundImage,\n  BaseContainer,\n  Block,\n  Content,\n  Row,\n  FlexCard,\n} from \"../components\"\n\nconst IndexPage = ({ data }) => {\n  const [homeHero, homeAuthority] = data.allStrapiSection.edges\n  return (\n    <DefaultLayout\n      seo={{ siteTitle: \"Penn Star\", siteTagline: \"Land Transfer\" }}\n    >\n      <BaseContainer fluid overflow=\"hidden\">\n        <BackgroundImage {...component.hero} />\n        <Row {...component.hero.content}>\n          <Block\n            fluid\n            shadow\n            alignItems=\"flex-start\"\n            {...component.hero.block}\n            config={{\n              heading: { border: true },\n              tagline: { border: true, fontSize: \"xl\" },\n              link: {\n                isDefault: false,\n                isMoreLink: true,\n                colorScheme: \"blue\",\n              },\n            }}\n            {...homeHero.node.block.block}\n          />\n        </Row>\n      </BaseContainer>\n      <BaseContainer fluid pattern {...padding.main}>\n        <Row fluid>\n          <Content shadow rounded color=\"bg4\" bg=\"background\">\n            <Block\n              fluid\n              config={{\n                heading: { textAlign: \"center\" },\n                misc: {\n                  mx: \"auto\",\n                  w: [\"90%\", null, null, \"60%\"],\n                  textAlign: \"center\",\n                },\n                content: {\n                  w: [\"90%\", null, null, \"70%\"],\n                  mx: \"auto\",\n                },\n              }}\n              textAlign=\"left\"\n              {...homeAuthority?.node?.block?.block}\n            >\n              <Row\n                w={[\"100%\", null, \"80%\"]}\n                responsive\n                center\n                flexWrap={[\"wrap\", null, null, \"nowrap\"]}\n                alignItems=\"stretch\"\n                order={5}\n                my={12}\n                mx=\"auto\"\n                color=\"background\"\n              >\n                {homeAuthority?.node?.block?.cards?.map((card, i) => (\n                  <FlexCard\n                    key={i}\n                    truncate\n                    flexbasis={constants?.CARD_WIDTH_LG}\n                    maxH=\"400px\"\n                    mx={[\"auto\", null, 3]}\n                    my={[3]}\n                    config={{\n                      heading: { fontSize: [\"lg\", null, \"xl\"] },\n                      text: { border: true },\n                      link: { p: 3 },\n                    }}\n                    {...card}\n                  />\n                ))}\n              </Row>\n            </Block>\n          </Content>\n        </Row>\n      </BaseContainer>\n    </DefaultLayout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query HomeQueryBasic {\n    allStrapiSection(\n      filter: { pages: { elemMatch: { name: { eq: \"home\" } } } }\n    ) {\n      edges {\n        node {\n          name\n          order\n          block {\n            name\n            block {\n              text {\n                text\n                type\n                order\n              }\n              content {\n                content\n              }\n              image {\n                alternativeText\n                name\n                height\n                width\n                formats {\n                  large {\n                    url\n                    size\n                    name\n                  }\n                  medium {\n                    url\n                    size\n                    name\n                  }\n                }\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n            }\n            cards {\n              text {\n                text\n                type\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              icon\n              content {\n                content\n              }\n            }\n            addons {\n              city\n              email\n              id\n              phone\n              state\n              streetAddress\n              suite\n              zip\n            }\n          }\n          pages {\n            name\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
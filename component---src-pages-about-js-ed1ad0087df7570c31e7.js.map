{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./node_modules/@chakra-ui/core/dist/es/Grid/index.js","webpack:///./node_modules/@chakra-ui/core/dist/es/SimpleGrid/utils.js","webpack:///./node_modules/@chakra-ui/core/dist/es/SimpleGrid/index.js"],"names":["AboutPage","data","allStrapiSection","edges","aboutHero","aboutUs","aboutTeam","node","block","cards","founder","rest","pageTagline","fluid","overflow","component","hero","heroContent","heroBlock","config","heading","border","tagline","fontSize","link","isDefault","isMoreLink","alignSelf","pattern","py","bg","shadow","rounded","maxW","MAX_WIDTH","mx","px","textAlign","w","color","isEnabled","isInline","order","spacing","columns","justifyItems","minChildWidth","my","map","card","i","key","query","Grid","_ref","ref","gap","rowGap","columnGap","autoFlow","autoRows","autoColumns","templateRows","templateColumns","templateAreas","area","column","row","props","createElement","Box","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","displayName","n","SimpleGrid","spacingX","spacingY","widthToColumns","width","Array","isArray","Object","keys","length","acc","countToColumns","count"],"mappings":"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","file":"component---src-pages-about-js-ed1ad0087df7570c31e7.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Box, SimpleGrid } from \"@chakra-ui/core\"\n\nimport DefaultLayout from \"../gatsby-plugin-chakra-ui/layouts/default\"\n\nimport {\n  test,\n  MAX_WIDTH,\n  component,\n  BackgroundImage,\n  BaseContainer,\n  Block,\n  Content,\n  Profile,\n  SimpleCard,\n} from \"../components\"\n\nconst AboutPage = ({ data }) => {\n  const [preFooter, aboutHero, aboutUs, aboutTeam] = data.allStrapiSection.edges\n\n  const [founder, ...rest] = aboutTeam.node.block.cards\n  return (\n    <DefaultLayout pageTagline={\"\"}>\n      <BaseContainer fluid overflow=\"hidden\">\n        <BackgroundImage {...component.hero} />\n        <Content {...component.heroContent}>\n          <Block\n            {...component.heroBlock}\n            config={{\n              heading: { border: true },\n              tagline: { border: true, fontSize: \"xl\" },\n              link: {\n                isDefault: false,\n                isMoreLink: true,\n                alignSelf: \"flex-end\",\n              },\n            }}\n            {...aboutHero.node.block.block}\n          />\n        </Content>\n      </BaseContainer>\n      <BaseContainer fluid pattern py={12}>\n        <Content\n          bg=\"background\"\n          shadow\n          rounded\n          maxW={MAX_WIDTH}\n          mx=\"auto\"\n          py={6}\n          px={4}\n          textAlign=\"center\"\n        >\n          <Block w=\"80%\" {...aboutUs.node.block.block} />\n        </Content>\n        <Content\n          bg=\"background\"\n          shadow\n          rounded\n          maxW={MAX_WIDTH}\n          mx=\"auto\"\n          py={6}\n          px={4}\n          color=\"white\"\n        >\n          <Box mx=\"auto\" w=\"100%\">\n            <SimpleCard\n              config={{ link: { isDefault: false, isEnabled: false } }}\n            >\n              <Profile {...founder} />\n            </SimpleCard>\n          </Box>\n          <Block py={12} px={4} w=\"80%\" {...aboutTeam.node.block.block}>\n            <SimpleGrid\n              isInline\n              order={8}\n              spacing={6}\n              columns={3}\n              justifyItems=\"center\"\n              minChildWidth={\"200px\"}\n              w=\"100%\"\n              mx=\"auto\"\n              my={12}\n              color=\"white\"\n            >\n              {rest?.map((card, i) => (\n                <SimpleCard\n                  key={i}\n                  maxW=\"200px\"\n                  mx=\"auto\"\n                  config={{ link: { isDefault: false, isEnabled: false } }}\n                >\n                  <Profile {...card} />\n                </SimpleCard>\n              ))}\n            </SimpleGrid>\n          </Block>\n        </Content>\n      </BaseContainer>\n    </DefaultLayout>\n  )\n}\n\nexport default AboutPage\n\nexport const query = graphql`\n  query AboutQueryBasic {\n    allStrapiSection(\n      filter: { pages: { elemMatch: { name: { eq: \"about\" } } } }\n    ) {\n      edges {\n        node {\n          block {\n            block {\n              text {\n                type\n                text\n                order\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              image {\n                alternativeText\n                caption\n                size\n                name\n                formats {\n                  large {\n                    url\n                    width\n                    height\n                  }\n                  medium {\n                    url\n                    width\n                    height\n                  }\n                }\n              }\n              content {\n                content\n              }\n            }\n            cards {\n              text {\n                type\n                text\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              icon\n              content {\n                content\n              }\n            }\n          }\n          name\n          order\n        }\n      }\n    }\n  }\n`\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React, { forwardRef } from \"react\";\nimport Box from \"../Box\";\nvar Grid = forwardRef(function (_ref, ref) {\n  var gap = _ref.gap,\n      rowGap = _ref.rowGap,\n      columnGap = _ref.columnGap,\n      autoFlow = _ref.autoFlow,\n      autoRows = _ref.autoRows,\n      autoColumns = _ref.autoColumns,\n      templateRows = _ref.templateRows,\n      templateColumns = _ref.templateColumns,\n      templateAreas = _ref.templateAreas,\n      area = _ref.area,\n      column = _ref.column,\n      row = _ref.row,\n      props = _objectWithoutPropertiesLoose(_ref, [\"gap\", \"rowGap\", \"columnGap\", \"autoFlow\", \"autoRows\", \"autoColumns\", \"templateRows\", \"templateColumns\", \"templateAreas\", \"area\", \"column\", \"row\"]);\n\n  return React.createElement(Box, _extends({\n    ref: ref,\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  }, props));\n});\nGrid.displayName = \"Grid\";\nexport default Grid;","// These helper fns are modified versions of the amazing rebass library\n// https://github.com/rebassjs/rebass/blob/master/packages/layout/src/index.js\nvar px = function px(n) {\n  return typeof n === \"number\" ? n + \"px\" : n;\n};\n\nexport var widthToColumns = function widthToColumns(width) {\n  if (Array.isArray(width)) {\n    return width.map(widthToColumns);\n  }\n\n  if (width !== null && typeof width === \"object\" && Object.keys(width).length > 0) {\n    var acc = {};\n\n    for (var key in width) {\n      acc[key] = \"repeat(auto-fit, minmax(\" + px(width[key]) + \", 1fr))\";\n    }\n\n    return acc;\n  }\n\n  if (width != null) {\n    return \"repeat(auto-fit, minmax(\" + px(width) + \", 1fr))\";\n  }\n\n  return null;\n};\nexport var countToColumns = function countToColumns(count) {\n  if (Array.isArray(count)) {\n    return count.map(countToColumns);\n  }\n\n  if (count !== null && typeof count === \"object\" && Object.keys(count).length > 0) {\n    var acc = {};\n\n    for (var key in count) {\n      acc[key] = \"repeat(\" + count[key] + \", 1fr)\";\n    }\n\n    return acc;\n  }\n\n  if (count != null) {\n    return \"repeat(\" + count + \", 1fr)\";\n  }\n\n  return null;\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React, { forwardRef } from \"react\";\nimport Grid from \"../Grid\";\nimport { countToColumns, widthToColumns } from \"./utils\";\nvar SimpleGrid = forwardRef(function (_ref, ref) {\n  var columns = _ref.columns,\n      spacingX = _ref.spacingX,\n      spacingY = _ref.spacingY,\n      spacing = _ref.spacing,\n      minChildWidth = _ref.minChildWidth,\n      props = _objectWithoutPropertiesLoose(_ref, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = !!minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, props));\n});\nSimpleGrid.displayName = \"SimpleGrid\";\nexport default SimpleGrid;"],"sourceRoot":""}
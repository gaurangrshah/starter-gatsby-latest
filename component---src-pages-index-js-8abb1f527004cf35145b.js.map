{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","data","allStrapiSection","edges","homeHero","homeAuthority","pageTagline","fluid","overflow","component","hero","content","alignItems","shadow","block","config","heading","border","tagline","fontSize","link","isDefault","isMoreLink","node","pattern","py","rounded","color","bg","textAlign","misc","mx","w","responsive","center","flexWrap","order","my","cards","map","card","i","key","flexbasis","constants","CARD_WIDTH","maxW","CARD_WIDTH_LG","minH","text","p","query"],"mappings":"2FAAA,8FA2FeA,UA3EG,SAAC,GAAc,IAAD,cAAXC,KACoBC,iBAAiBC,MAAjDC,EADuB,KACbC,EADa,KAE9B,OACE,kBAAC,IAAD,CAAeC,YAAa,IAC1B,kBAAC,gBAAD,CAAeC,OAAK,EAACC,SAAS,UAC5B,kBAAC,kBAAoBC,YAAUC,MAC/B,kBAAC,MAAD,eAAKH,OAAK,GAAKE,YAAUC,KAAKC,SAC5B,kBAAC,QAAD,eACEJ,OAAK,EACLK,WAAW,aACXC,QAAM,GACFJ,YAAUC,KAAKI,MAJrB,CAKEC,OAAQ,CACNC,QAAS,CAAEC,QAAQ,GACnBC,QAAS,CAAED,QAAQ,EAAME,SAAU,MACnCC,KAAM,CACJC,WAAW,EACXC,YAAY,KAGZlB,EAASmB,KAAKT,MAAMA,UAI9B,kBAAC,gBAAD,CAAeP,OAAK,EAACiB,SAAO,EAACC,GAAI,IAC/B,kBAAC,MAAD,CAAKlB,OAAK,GACR,kBAAC,UAAD,CAASM,QAAM,EAACa,SAAO,EAACC,MAAM,MAAMC,GAAG,cACrC,kBAAC,QAAD,eACErB,OAAK,EACLQ,OAAQ,CACNC,QAAS,CAAEa,UAAW,UACtBC,KAAM,CACJC,GAAI,OACJC,EAAG,CAAC,MAAO,KAAM,KAAM,OACvBH,UAAW,UAEblB,QAAS,CACPqB,EAAG,CAAC,MAAO,KAAM,KAAM,OACvBD,GAAI,SAGRF,UAAU,QACNxB,SAfN,UAeMA,EAAekB,YAfrB,iBAeM,EAAqBT,aAf3B,aAeM,EAA4BA,OAEhC,kBAAC,MAAD,CACEP,OAAK,EACL0B,YAAU,EACVC,QAAM,EACNC,SAAS,OACTC,MAAO,EACPC,GAAI,GACJV,MAAM,cAELtB,SATH,UASGA,EAAekB,YATlB,iBASG,EAAqBT,aATxB,iBASG,EAA4BwB,aAT/B,aASG,EAAmCC,KAAI,SAACC,EAAMC,GAAP,OACtC,kBAAC,aAAD,eACEC,IAAKD,EACLE,UAAS,OAAEC,kBAAF,IAAEA,iBAAF,EAAEA,YAAWC,WACtBC,KAAI,OAAEF,kBAAF,IAAEA,iBAAF,EAAEA,YAAWG,cACjBC,KAAK,QACLjC,OAAQ,CACNkC,KAAM,CAAEhC,QAAQ,GAChBG,KAAM,CAAE8B,EAAG,KAETV,cAcjB,IAAMW,EAAK","file":"component---src-pages-index-js-8abb1f527004cf35145b.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport DefaultLayout from \"../gatsby-plugin-chakra-ui/layouts/default\"\n\nimport {\n  constants,\n  component,\n  BackgroundImage,\n  BaseContainer,\n  Block,\n  Content,\n  Row,\n  SimpleCard,\n} from \"../components\"\n\nconst IndexPage = ({ data }) => {\n  const [homeHero, homeAuthority] = data.allStrapiSection.edges\n  return (\n    <DefaultLayout pageTagline={\"\"}>\n      <BaseContainer fluid overflow=\"hidden\">\n        <BackgroundImage {...component.hero} />\n        <Row fluid {...component.hero.content}>\n          <Block\n            fluid\n            alignItems=\"flex-start\"\n            shadow\n            {...component.hero.block}\n            config={{\n              heading: { border: true },\n              tagline: { border: true, fontSize: \"xl\" },\n              link: {\n                isDefault: false,\n                isMoreLink: true,\n              },\n            }}\n            {...homeHero.node.block.block}\n          />\n        </Row>\n      </BaseContainer>\n      <BaseContainer fluid pattern py={12 * 4}>\n        <Row fluid>\n          <Content shadow rounded color=\"bg4\" bg=\"background\">\n            <Block\n              fluid\n              config={{\n                heading: { textAlign: \"center\" },\n                misc: {\n                  mx: \"auto\",\n                  w: [\"90%\", null, null, \"60%\"],\n                  textAlign: \"center\",\n                },\n                content: {\n                  w: [\"90%\", null, null, \"70%\"],\n                  mx: \"auto\",\n                },\n              }}\n              textAlign=\"left\"\n              {...homeAuthority?.node?.block?.block}\n            >\n              <Row\n                fluid\n                responsive\n                center\n                flexWrap=\"wrap\"\n                order={5}\n                my={12}\n                color=\"background\"\n              >\n                {homeAuthority?.node?.block?.cards?.map((card, i) => (\n                  <SimpleCard\n                    key={i}\n                    flexbasis={constants?.CARD_WIDTH}\n                    maxW={constants?.CARD_WIDTH_LG}\n                    minH=\"250px\"\n                    config={{\n                      text: { border: true },\n                      link: { p: 3 },\n                    }}\n                    {...card}\n                  />\n                ))}\n              </Row>\n            </Block>\n          </Content>\n        </Row>\n      </BaseContainer>\n    </DefaultLayout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query HomeQueryBasic {\n    allStrapiSection(\n      filter: { pages: { elemMatch: { name: { eq: \"home\" } } } }\n    ) {\n      edges {\n        node {\n          name\n          order\n          block {\n            name\n            block {\n              text {\n                text\n                type\n                order\n              }\n              content {\n                content\n              }\n              image {\n                alternativeText\n                name\n                height\n                width\n                formats {\n                  large {\n                    url\n                    size\n                    name\n                  }\n                  medium {\n                    url\n                    size\n                    name\n                  }\n                }\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n            }\n            cards {\n              text {\n                text\n                type\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              icon\n              content {\n                content\n              }\n            }\n            addons {\n              city\n              email\n              id\n              phone\n              state\n              streetAddress\n              suite\n              zip\n            }\n          }\n          pages {\n            name\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
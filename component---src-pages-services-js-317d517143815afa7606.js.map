{"version":3,"sources":["webpack:///./node_modules/@chakra-ui/core/dist/es/Grid/index.js","webpack:///./node_modules/@chakra-ui/core/dist/es/SimpleGrid/utils.js","webpack:///./node_modules/@chakra-ui/core/dist/es/SimpleGrid/index.js","webpack:///./src/pages/services.js"],"names":["Grid","_ref","ref","gap","rowGap","columnGap","autoFlow","autoRows","autoColumns","templateRows","templateColumns","templateAreas","area","column","row","props","createElement","Box","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","displayName","px","n","SimpleGrid","columns","spacingX","spacingY","spacing","minChildWidth","widthToColumns","width","Array","isArray","map","Object","keys","length","acc","key","countToColumns","count","ServicesPage","data","allStrapiSection","edges","servicesHero","services","console","log","pageTagline","fluid","overflow","minH","maxH","gradientOverlay","linearGradient","position","top","flexDirection","alignItems","w","color","textAlign","mr","mt","shadow","config","heading","border","tagline","fontSize","link","isDefault","isMoreLink","alignSelf","node","block","colums","justify","cards","card","i","h","mx","maxW","truncate","as","icon","pattern","py","justifyContent","flexWrap","padding","query"],"mappings":"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","file":"component---src-pages-services-js-317d517143815afa7606.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React, { forwardRef } from \"react\";\nimport Box from \"../Box\";\nvar Grid = forwardRef(function (_ref, ref) {\n  var gap = _ref.gap,\n      rowGap = _ref.rowGap,\n      columnGap = _ref.columnGap,\n      autoFlow = _ref.autoFlow,\n      autoRows = _ref.autoRows,\n      autoColumns = _ref.autoColumns,\n      templateRows = _ref.templateRows,\n      templateColumns = _ref.templateColumns,\n      templateAreas = _ref.templateAreas,\n      area = _ref.area,\n      column = _ref.column,\n      row = _ref.row,\n      props = _objectWithoutPropertiesLoose(_ref, [\"gap\", \"rowGap\", \"columnGap\", \"autoFlow\", \"autoRows\", \"autoColumns\", \"templateRows\", \"templateColumns\", \"templateAreas\", \"area\", \"column\", \"row\"]);\n\n  return React.createElement(Box, _extends({\n    ref: ref,\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  }, props));\n});\nGrid.displayName = \"Grid\";\nexport default Grid;","// These helper fns are modified versions of the amazing rebass library\n// https://github.com/rebassjs/rebass/blob/master/packages/layout/src/index.js\nvar px = function px(n) {\n  return typeof n === \"number\" ? n + \"px\" : n;\n};\n\nexport var widthToColumns = function widthToColumns(width) {\n  if (Array.isArray(width)) {\n    return width.map(widthToColumns);\n  }\n\n  if (width !== null && typeof width === \"object\" && Object.keys(width).length > 0) {\n    var acc = {};\n\n    for (var key in width) {\n      acc[key] = \"repeat(auto-fit, minmax(\" + px(width[key]) + \", 1fr))\";\n    }\n\n    return acc;\n  }\n\n  if (width != null) {\n    return \"repeat(auto-fit, minmax(\" + px(width) + \", 1fr))\";\n  }\n\n  return null;\n};\nexport var countToColumns = function countToColumns(count) {\n  if (Array.isArray(count)) {\n    return count.map(countToColumns);\n  }\n\n  if (count !== null && typeof count === \"object\" && Object.keys(count).length > 0) {\n    var acc = {};\n\n    for (var key in count) {\n      acc[key] = \"repeat(\" + count[key] + \", 1fr)\";\n    }\n\n    return acc;\n  }\n\n  if (count != null) {\n    return \"repeat(\" + count + \", 1fr)\";\n  }\n\n  return null;\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React, { forwardRef } from \"react\";\nimport Grid from \"../Grid\";\nimport { countToColumns, widthToColumns } from \"./utils\";\nvar SimpleGrid = forwardRef(function (_ref, ref) {\n  var columns = _ref.columns,\n      spacingX = _ref.spacingX,\n      spacingY = _ref.spacingY,\n      spacing = _ref.spacing,\n      minChildWidth = _ref.minChildWidth,\n      props = _objectWithoutPropertiesLoose(_ref, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = !!minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, props));\n});\nSimpleGrid.displayName = \"SimpleGrid\";\nexport default SimpleGrid;","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Box, Grid, SimpleGrid } from \"@chakra-ui/core\"\n\nimport DefaultLayout from \"../gatsby-plugin-chakra-ui/layouts/default\"\n\nimport {\n  test,\n  linearGradient,\n  BackgroundImage,\n  BaseContainer,\n  Block,\n  Content,\n  PreFooter,\n  Row,\n  SimpleCard,\n} from \"../components\"\n\nconst ServicesPage = ({ data }) => {\n  const [preFoooter, servicesHero, services] = data.allStrapiSection.edges\n\n  console.log(services)\n\n  return (\n    <DefaultLayout pageTagline={\"\"}>\n      <BaseContainer fluid overflow=\"hidden\">\n        <BackgroundImage\n          minH={[\"400px\", null, null, \"600px\"]}\n          maxH=\"80vh\"\n          gradientOverlay={linearGradient(14)}\n        />\n        <Row\n          position=\"absolute\"\n          top=\"0\"\n          // right=\"0\"\n          flexDirection=\"column\"\n          alignItems=\"flex-end\"\n          w=\"100%\"\n        >\n          <Content position=\"relative\" color textAlign=\"left\">\n            <Block\n              mr={[12, null, null, 12 * 4]}\n              mt={[12, \"20%\", null, 12 * 4]}\n              shadow\n              position=\"relative\"\n              config={{\n                heading: { border: true },\n                tagline: { border: true, fontSize: \"xl\" },\n                link: {\n                  isDefault: false,\n                  isMoreLink: true,\n                  alignSelf: \"flex-end\",\n                },\n              }}\n              {...servicesHero.node.block.block}\n            />\n          </Content>\n          <Content w=\"70%\" mr={5}>\n            <SimpleGrid\n              colums={3}\n              minChildWidth=\"150px\"\n              spacing={3}\n              justify=\"center\"\n            >\n              {servicesHero.node.block.cards.map((card, i) => (\n                <SimpleCard\n                  key={i}\n                  h=\"100%\"\n                  mx=\"auto\"\n                  maxW=\"250px\"\n                  minH=\"250px\"\n                  truncate={20}\n                  {...card}\n                  config={{ link: { as: Box }, icon: { color: \"lightblue\" } }}\n                />\n              ))}\n            </SimpleGrid>\n          </Content>\n        </Row>\n      </BaseContainer>\n      <BaseContainer fluid pattern h=\"100%\" py={12} mx=\"auto\">\n        <Content\n          position=\"relative\"\n          w=\"80%\"\n          h=\"800px\"\n          mx=\"auto\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          flexWrap=\"wrap\"\n        >\n          {services.node.block.cards.map((card, i) => (\n            <SimpleCard\n              key={i}\n              mx=\"auto\"\n              w=\"250px\"\n              h=\"180px\"\n              {...card}\n              config={{ link: { padding: \"1em\" } }}\n            />\n          ))}\n        </Content>\n      </BaseContainer>\n    </DefaultLayout>\n  )\n}\n\nexport default ServicesPage\n\nexport const query = graphql`\n  query ServicesQueryBasic {\n    allStrapiSection(\n      filter: { pages: { elemMatch: { name: { eq: \"services\" } } } }\n    ) {\n      edges {\n        node {\n          block {\n            block {\n              text {\n                type\n                text\n                order\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              image {\n                alternativeText\n                caption\n                size\n                name\n                formats {\n                  large {\n                    url\n                    width\n                    height\n                  }\n                  medium {\n                    url\n                    width\n                    height\n                  }\n                }\n              }\n              content {\n                content\n              }\n            }\n            cards {\n              text {\n                type\n                text\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              icon\n              content {\n                content\n              }\n            }\n          }\n          name\n          order\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
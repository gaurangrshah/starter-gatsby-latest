{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./node_modules/@chakra-ui/core/dist/es/Grid/index.js","webpack:///./node_modules/@chakra-ui/core/dist/es/SimpleGrid/utils.js","webpack:///./node_modules/@chakra-ui/core/dist/es/SimpleGrid/index.js"],"names":["AboutPage","data","allStrapiSection","edges","aboutHero","aboutUs","aboutTeam","node","block","cards","founder","rest","pageTagline","fluid","overflow","minH","maxH","gradientOverlay","linearGradient","color","position","top","textAlign","ml","mt","shadow","config","heading","border","tagline","fontSize","link","isDefault","isMoreLink","alignSelf","py","w","mx","maxW","isEnabled","my","order","spacing","columns","minChildWidth","isInline","map","card","i","key","query","Grid","_ref","ref","gap","rowGap","columnGap","autoFlow","autoRows","autoColumns","templateRows","templateColumns","templateAreas","area","column","row","props","createElement","Box","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","displayName","px","n","SimpleGrid","spacingX","spacingY","widthToColumns","width","Array","isArray","Object","keys","length","acc","countToColumns","count"],"mappings":"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","file":"component---src-pages-about-js-de06748f3e2b07fe5ca2.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Box, SimpleGrid } from \"@chakra-ui/core\"\n\nimport DefaultLayout from \"../gatsby-plugin-chakra-ui/layouts/default\"\n\nimport {\n  test,\n  linearGradient,\n  BackgroundImage,\n  BaseContainer,\n  Block,\n  Content,\n  Profile,\n  SimpleCard,\n} from \"../components\"\n\nconst AboutPage = ({ data }) => {\n  const [preFooter, aboutHero, aboutUs, aboutTeam] = data.allStrapiSection.edges\n\n  const [founder, ...rest] = aboutTeam.node.block.cards\n  return (\n    <DefaultLayout pageTagline={\"\"}>\n      <BaseContainer fluid overflow=\"hidden\">\n        <BackgroundImage\n          minH={[\"400px\", null, null, \"600px\"]}\n          maxH=\"80vh\"\n          gradientOverlay={linearGradient(14)}\n        />\n        <Content\n          color\n          position=\"absolute\"\n          top={0}\n          textAlign=\"left\"\n          ml={[12, null, null, 12 * 4]}\n          mt={[12, \"20%\", null, 12 * 4]}\n        >\n          <Block\n            shadow\n            position=\"relative\"\n            config={{\n              heading: { border: true },\n              tagline: { border: true, fontSize: \"xl\" },\n              link: {\n                isDefault: false,\n                isMoreLink: true,\n                alignSelf: \"flex-end\",\n              },\n            }}\n            {...aboutHero.node.block.block}\n          />\n        </Content>\n      </BaseContainer>\n      <BaseContainer>\n        <Content py={6} textAlign=\"center\">\n          <Block {...aboutUs.node.block.block} />\n        </Content>\n      </BaseContainer>\n      <BaseContainer>\n        <Content>\n          <Box w=\"40%\" mx=\"auto\" color=\"mode.light.background\">\n            <SimpleCard\n              maxW=\"280px\"\n              config={{ link: { isDefault: false, isEnabled: false } }}\n            >\n              <Profile {...founder} />\n            </SimpleCard>\n          </Box>\n          <Block {...aboutTeam.node.block.block}>\n            <SimpleGrid\n              w=\"80%\"\n              mx=\"auto\"\n              my={12}\n              order={8}\n              spacing={6}\n              columns={3}\n              minChildWidth={\"200px\"}\n              color=\"white\"\n              isInline\n            >\n              {rest?.map((card, i) => (\n                <SimpleCard\n                  key={i}\n                  maxW=\"280px\"\n                  config={{ link: { isDefault: false, isEnabled: false } }}\n                >\n                  <Profile {...card} />\n                </SimpleCard>\n              ))}\n            </SimpleGrid>\n          </Block>\n        </Content>\n      </BaseContainer>\n    </DefaultLayout>\n  )\n}\n\nexport default AboutPage\n\nexport const query = graphql`\n  query AboutQueryBasic {\n    allStrapiSection(\n      filter: { pages: { elemMatch: { name: { eq: \"about\" } } } }\n    ) {\n      edges {\n        node {\n          block {\n            block {\n              text {\n                type\n                text\n                order\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              image {\n                alternativeText\n                caption\n                size\n                name\n                formats {\n                  large {\n                    url\n                    width\n                    height\n                  }\n                  medium {\n                    url\n                    width\n                    height\n                  }\n                }\n              }\n              content {\n                content\n              }\n            }\n            cards {\n              text {\n                type\n                text\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              icon\n              content {\n                content\n              }\n            }\n          }\n          name\n          order\n        }\n      }\n    }\n  }\n`\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React, { forwardRef } from \"react\";\nimport Box from \"../Box\";\nvar Grid = forwardRef(function (_ref, ref) {\n  var gap = _ref.gap,\n      rowGap = _ref.rowGap,\n      columnGap = _ref.columnGap,\n      autoFlow = _ref.autoFlow,\n      autoRows = _ref.autoRows,\n      autoColumns = _ref.autoColumns,\n      templateRows = _ref.templateRows,\n      templateColumns = _ref.templateColumns,\n      templateAreas = _ref.templateAreas,\n      area = _ref.area,\n      column = _ref.column,\n      row = _ref.row,\n      props = _objectWithoutPropertiesLoose(_ref, [\"gap\", \"rowGap\", \"columnGap\", \"autoFlow\", \"autoRows\", \"autoColumns\", \"templateRows\", \"templateColumns\", \"templateAreas\", \"area\", \"column\", \"row\"]);\n\n  return React.createElement(Box, _extends({\n    ref: ref,\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  }, props));\n});\nGrid.displayName = \"Grid\";\nexport default Grid;","// These helper fns are modified versions of the amazing rebass library\n// https://github.com/rebassjs/rebass/blob/master/packages/layout/src/index.js\nvar px = function px(n) {\n  return typeof n === \"number\" ? n + \"px\" : n;\n};\n\nexport var widthToColumns = function widthToColumns(width) {\n  if (Array.isArray(width)) {\n    return width.map(widthToColumns);\n  }\n\n  if (width !== null && typeof width === \"object\" && Object.keys(width).length > 0) {\n    var acc = {};\n\n    for (var key in width) {\n      acc[key] = \"repeat(auto-fit, minmax(\" + px(width[key]) + \", 1fr))\";\n    }\n\n    return acc;\n  }\n\n  if (width != null) {\n    return \"repeat(auto-fit, minmax(\" + px(width) + \", 1fr))\";\n  }\n\n  return null;\n};\nexport var countToColumns = function countToColumns(count) {\n  if (Array.isArray(count)) {\n    return count.map(countToColumns);\n  }\n\n  if (count !== null && typeof count === \"object\" && Object.keys(count).length > 0) {\n    var acc = {};\n\n    for (var key in count) {\n      acc[key] = \"repeat(\" + count[key] + \", 1fr)\";\n    }\n\n    return acc;\n  }\n\n  if (count != null) {\n    return \"repeat(\" + count + \", 1fr)\";\n  }\n\n  return null;\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React, { forwardRef } from \"react\";\nimport Grid from \"../Grid\";\nimport { countToColumns, widthToColumns } from \"./utils\";\nvar SimpleGrid = forwardRef(function (_ref, ref) {\n  var columns = _ref.columns,\n      spacingX = _ref.spacingX,\n      spacingY = _ref.spacingY,\n      spacing = _ref.spacing,\n      minChildWidth = _ref.minChildWidth,\n      props = _objectWithoutPropertiesLoose(_ref, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = !!minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, props));\n});\nSimpleGrid.displayName = \"SimpleGrid\";\nexport default SimpleGrid;"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./node_modules/@chakra-ui/core/dist/esm/chakra-provider.js","webpack:///./src/gatsby-plugin-chakra-ui/layouts/global.js","webpack:///./src/gatsby-plugin-chakra-ui/layouts/default.js","webpack:///./node_modules/focus-visible/dist/focus-visible.js"],"names":["AboutPage","data","allStrapiSection","edges","aboutHero","aboutUs","aboutTeam","node","block","cards","founder","rest","hero","useMultiStyleConfig","seo","siteTitle","siteTagline","fluid","overflow","sx","base","color","content","shadow","alignItems","config","tagline","border","fontSize","link","colorScheme","isDefault","isMoreLink","pattern","py","bg","rounded","maxW","mx","px","textAlign","heading","my","lead","borderColor","w","isEnabled","responsive","center","justifyContent","hideMobile","flex","text","type","textTransform","pt","mb","flexWrap","order","map","card","i","key","minH","flexGrow","m","query","props","_theme$config","children","colorModeManager","portalZIndex","_props$resetCSS","resetCSS","_props$theme","theme","useSystemColorMode","zIndex","Global","styles","css","DefaultLayout","header","prefooter","allowPanelUpdate","colorMode","useColorMode","site","useSiteMetadata","title","brandColors","themeUpdate","colors","brand","isClient","console","log","context","PanelContext","id","fontFamily","initialOffset","timeout","in","as","mt","applyFocusVisiblePolyfill","scope","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesWhitelist","search","url","tel","email","password","number","date","month","week","time","datetime","isValidFocusTarget","el","document","nodeName","classList","addFocusVisibleClass","contains","add","setAttribute","onPointerDown","e","addInitialPointerMoveListeners","addEventListener","onInitialPointerMove","target","toLowerCase","removeEventListener","metaKey","altKey","ctrlKey","activeElement","visibilityState","tagName","readOnly","isContentEditable","hasAttribute","window","clearTimeout","setTimeout","remove","removeAttribute","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","DOCUMENT_NODE","documentElement","event","CustomEvent","error","createEvent","initCustomEvent","dispatchEvent","factory"],"mappings":"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","file":"component---src-pages-about-js-3d5f72daa13a03df5788.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { useMultiStyleConfig } from \"@chakra-ui/core\"\n\nimport DefaultLayout from \"../gatsby-plugin-chakra-ui/layouts/default\"\n\nimport {\n  BackgroundImage,\n  BaseContainer,\n  Block,\n  Content,\n  FlexCard,\n  Profile,\n  Row,\n  SimpleCard,\n  StarsStripesLeft,\n  StarsStripesRight,\n} from \"../components\"\n\nconst AboutPage = ({ data }) => {\n  const [aboutHero, aboutUs, aboutTeam] = data.allStrapiSection.edges\n\n  const [founder, ...rest] = aboutTeam.node.block.cards\n  const hero = useMultiStyleConfig(\"hero\", {})\n\n  return (\n    <DefaultLayout seo={{ siteTitle: \"About\", siteTagline: \"Penn Star\" }}>\n      <BaseContainer fluid overflow=\"hidden\">\n        <BackgroundImage sx={hero.base} />\n        <Row color sx={hero.content}>\n          <Block\n            fluid\n            shadow\n            sx={hero.block}\n            alignItems=\"flex-start\"\n            config={{\n              tagline: { border: true, fontSize: [\"md\", \"xl\"] },\n              link: {\n                colorScheme: \"blue\",\n                isDefault: false,\n                isMoreLink: true,\n              },\n            }}\n            {...aboutHero.node.block.block}\n          />\n        </Row>\n      </BaseContainer>\n      <BaseContainer fluid pattern py={[12, null, null, 12 * 3]}>\n        <Content\n          bg=\"background\"\n          color=\"bg4\"\n          shadow\n          rounded\n          maxW={[\"5xl\", null, null, null, \"60%\"]}\n          mx=\"auto\"\n          py={6}\n          px={4}\n          textAlign=\"center\"\n        >\n          <Block\n            fluid\n            {...aboutUs.node.block.block}\n            config={{\n              heading: { my: 12 },\n              lead: {\n                mx: \"auto\",\n                border: true,\n                borderColor: \"red\",\n              },\n              content: {\n                color: `mode.${\"light\"}.text`,\n                textAlign: [\"left\", null, \"center\"],\n              },\n            }}\n          />\n        </Content>\n        <Content\n          bg=\"background\"\n          color={`mode.${\"light\"}.text`}\n          shadow\n          rounded\n          maxW={[\"5xl\", null, null, null, \"60%\"]}\n          mx=\"auto\"\n          my={12}\n          py={6}\n          px={4}\n        >\n          <SimpleCard\n            w={[\"100%\", \"25%\"]}\n            color=\"background\"\n            config={{\n              link: { isDefault: false, isEnabled: false },\n            }}\n          >\n            <Profile {...founder} />\n          </SimpleCard>\n          <Block fluid py={12} {...aboutTeam.node.block.block} />\n        </Content>\n      </BaseContainer>\n      <BaseContainer bg fluid color=\"brand\" py={12}>\n        <Row\n          maxW={\"5xl\"}\n          responsive\n          center\n          justifyContent={[\"center\", null, null, \"space-around\"]}\n        >\n          <StarsStripesLeft w=\"25%\" hideMobile />\n          <Block\n            flex={1}\n            textAlign=\"center\"\n            text={[{ text: \"Penn Star All-Stars\", type: \"heading\" }]}\n            mx=\"auto\"\n            config={{\n              heading: {\n                fontSize: [\"xl\", null, \"3xl\"],\n                textTransform: \"uppercase\",\n                pt: 10,\n              },\n            }}\n          />\n          <StarsStripesRight w=\"25%\" hideMobile />\n        </Row>\n        <Content\n          shadow\n          rounded\n          bg=\"background\"\n          maxW={[\"5xl\", null, null, null, \"60%\"]}\n          py={6}\n          mb={12}\n          textAlign=\"center\"\n          color=\"bg4\"\n        >\n          <Row\n            flexWrap={[\"wrap\", \"nowrap\"]}\n            color=\"background\"\n            justifyContent={[\"space-between\", null, \"space-around\"]}\n            alignItems=\"center\"\n            order={8}\n            my={12}\n          >\n            {rest?.map((card, i) => (\n              <FlexCard\n                key={i}\n                minH={\"180px\"}\n                w={[\"100%\", \"45%\", \"30%\"]}\n                flexGrow={0}\n                m={[3]}\n                config={{\n                  link: { isEnabled: false },\n                }}\n              >\n                <Profile {...card} />\n              </FlexCard>\n            ))}\n          </Row>\n        </Content>\n      </BaseContainer>\n    </DefaultLayout>\n  )\n}\n\nexport default AboutPage\n\nexport const query = graphql`\n  query AboutQueryBasic {\n    allStrapiSection(\n      filter: { pages: { elemMatch: { name: { eq: \"about\" } } } }\n    ) {\n      edges {\n        node {\n          block {\n            block {\n              text {\n                type\n                text\n                order\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              image {\n                alternativeText\n                caption\n                size\n                name\n                formats {\n                  large {\n                    url\n                    width\n                    height\n                  }\n                  medium {\n                    url\n                    width\n                    height\n                  }\n                }\n              }\n              content {\n                content\n              }\n            }\n            cards {\n              text {\n                type\n                text\n              }\n              link {\n                path\n                label\n                isEnabled\n              }\n              icon\n              content {\n                content\n              }\n            }\n          }\n          name\n          order\n        }\n      }\n    }\n  }\n`\n","import CSSReset from \"@chakra-ui/css-reset\";\nimport { PortalManager } from \"@chakra-ui/portal\";\nimport { ColorModeProvider, ThemeProvider, GlobalStyle } from \"@chakra-ui/system\";\nimport defaultTheme from \"@chakra-ui/theme\";\nimport * as React from \"react\";\n/**\n * The global provider that must be added to make all Chakra components\n * work correctly\n */\n\nexport var ChakraProvider = function ChakraProvider(props) {\n  var _theme$config;\n\n  var children = props.children,\n      colorModeManager = props.colorModeManager,\n      portalZIndex = props.portalZIndex,\n      _props$resetCSS = props.resetCSS,\n      resetCSS = _props$resetCSS === void 0 ? true : _props$resetCSS,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? defaultTheme : _props$theme;\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme\n  }, /*#__PURE__*/React.createElement(ColorModeProvider, {\n    colorModeManager: colorModeManager,\n    useSystemColorMode: !!((_theme$config = theme.config) == null ? void 0 : _theme$config.useSystemColorMode)\n  }, resetCSS && /*#__PURE__*/React.createElement(CSSReset, null), /*#__PURE__*/React.createElement(GlobalStyle, null), portalZIndex ? /*#__PURE__*/React.createElement(PortalManager, {\n    zIndex: portalZIndex\n  }, children) : children));\n};","import React from \"react\"\nimport { Global as EmotionGlobal, css } from \"@emotion/core\"\nimport \"focus-visible/dist/focus-visible\"\n\nexport const Global = () => {\n  return (\n    <EmotionGlobal\n      styles={css`\n        /*\n        This will hide the focus indicator if the element receives focus via the mouse,\n        but it will still show up on keyboard focus.\n        https://medium.com/@keeganfamouss/accessibility-on-demand-with-chakra-ui-and-focus-visible-19413b1bc6f9\n      */\n\n        #gatsby-focus-wrapper {\n          color: white;\n        }\n        .js-focus-visible :focus:not([data-focus-visible-added]) {\n          outline: none;\n          box-shadow: none;\n        }\n        * {\n          border: 0;\n          margin: 0;\n          padding: 0;\n          box-sizing: border-box;\n          & :before {\n            box-sizing: border-box;\n          }\n        }\n\n        input:focus {\n          border: inherit;\n        }\n        input:focus:invalid {\n          background: rgba(255, 224, 224, 1);\n        }\n        input:valid,\n        input:focus:valid {\n          background: rgba(226, 250, 219, 1);\n        }\n        a:active,\n        a:focus,\n        a:visited {\n          outline: 0;\n          border: none;\n          outline-style: none;\n          -moz-outline-style: none;\n          text-decoration: none;\n          box-shadow: 0 0 0 1px rgba(0, 0, 0, 0) !important;\n          -moz-box-shadow: 0 0 0 1px rgba(0, 0, 0, 0) !important;\n          -webkit-box-shadow: 0 0 0 1px rgba(0, 0, 0, 0) !important;\n        }\n        a:hover {\n          text-decoration: none;\n        }\n        a[aria-current=\"page\"].nav-link {\n          color: #1a5eef;\n          background: #d9e4fd;\n          border-radius: 5px;\n          pointer-events: none;\n        }\n        a {\n          color: inherit;\n        }\n        html,\n        body {\n          font-size: 16px;\n          max-width: 100vw;\n          height: 100%;\n          box-sizing: border-box;\n          scroll-behavior: smooth;\n          font-family: \"Encode Sans\", sans-serif;\n        }\n        body {\n          margin: 0;\n          padding: 0;\n          line-height: 1.35em;\n          text-rendering: optimizeLegibility;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n          -webkit-overflow-scrolling: touch;\n          max-width: 100%;\n          height: 100%;\n        }\n        #content-wrapper {\n          display: flex;\n          flex-direction: column;\n          max-width: 100%;\n          overflow-x: hidden;\n          z-index: 0;\n        }\n        header,\n        footer {\n          position: fixed;\n          width: 100%;\n          z-index: 1500;\n        }\n        header {\n          top: 0;\n        }\n        main {\n          flex: 1 0 auto;\n          overflow: auto;\n          max-width: 100%;\n          overflow-x: hidden;\n        }\n        footer {\n          bottom: 0;\n        }\n      `}\n    />\n  )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Box, ChakraProvider, useColorMode } from \"@chakra-ui/core\"\n// import { merge } from \"@chakra-ui/utils\"\nimport { SlideFade } from \"@chakra-ui/transition\"\n\nimport theme from \"../theme\"\nimport { Global } from \"./global\"\n\nimport SEO from \"../../components/seo\"\nimport {\n  Header,\n  Footer,\n  ModeToggle,\n  Sidebar,\n  PreFooter,\n} from \"../../components\"\n\nimport useSiteMetadata from \"../../hooks/use-site-metadata\"\n\n// import { isDev } from \"../../utils\"\nimport { PanelContext, PanelProvider } from \"../../contexts/panel-context\"\nimport { isClient } from \"../../utils/tools/tools\"\n\nimport \"../../styles/main.scss\"\n\nconst DefaultLayout = ({\n  header = true,\n  prefooter = true,\n  seo,\n  allowPanelUpdate = false,\n  children,\n  ...rest\n}) => {\n  const { colorMode } = useColorMode()\n  const site = useSiteMetadata()\n  const {\n    title,\n    // tagline,\n    brandColors,\n  } = site\n\n  const themeUpdate = {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      brand: {\n        ...theme.colors.brand,\n        ...brandColors, // : { primary, secondary }\n      },\n    },\n  }\n\n  isClient && console.log(\"⭕️themeUpdate\", themeUpdate)\n\n  return (\n    <>\n      <Global />\n      <SEO seo={{ siteTitle: title, ...seo }} />\n      <ChakraProvider resetCSS theme={themeUpdate}>\n        <ModeToggle />\n        <PanelProvider {...{ allowPanelUpdate }}>\n          <Sidebar context={PanelContext} />\n          <Box\n            id=\"content-wrapper\"\n            color={`mode.${colorMode}.text`}\n            fontFamily=\"body\"\n          >\n            {header ? (\n              <SlideFade\n                // placement=\"top\"\n                initialOffset=\"-20px\"\n                timeout={800}\n                in={true}\n              >\n                {styles => (\n                  <Header\n                    siteTitle={title}\n                    siteTagline={seo?.siteTagline}\n                    sx={styles}\n                  />\n                )}\n              </SlideFade>\n            ) : null}\n            <Box as=\"main\" {...rest} mt={10}>\n              {children}\n            </Box>\n          </Box>\n        </PanelProvider>\n        {prefooter ? <PreFooter /> : null}\n\n        <SlideFade initialOffset=\"20px\" timeout={2000} in={true}>\n          {styles => (\n            <Footer\n              siteTitle={title}\n              siteTagline={seo?.siteTagline}\n              sx={styles}\n            />\n          )}\n        </SlideFade>\n      </ChakraProvider>\n    </>\n  )\n}\n\nDefaultLayout.propTypes = {\n  header: PropTypes.bool,\n  pageTagline: PropTypes.string,\n  children: PropTypes.node.isRequired,\n}\n\nexport default DefaultLayout\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory() : typeof define === 'function' && define.amd ? define(factory) : factory();\n})(this, function () {\n  'use strict';\n  /**\n   * Applies the :focus-visible polyfill at the given scope.\n   * A scope in this case is either the top-level Document or a Shadow Root.\n   *\n   * @param {(Document|ShadowRoot)} scope\n   * @see https://github.com/WICG/focus-visible\n   */\n\n  function applyFocusVisiblePolyfill(scope) {\n    var hadKeyboardEvent = true;\n    var hadFocusVisibleRecently = false;\n    var hadFocusVisibleRecentlyTimeout = null;\n    var inputTypesWhitelist = {\n      text: true,\n      search: true,\n      url: true,\n      tel: true,\n      email: true,\n      password: true,\n      number: true,\n      date: true,\n      month: true,\n      week: true,\n      time: true,\n      datetime: true,\n      'datetime-local': true\n    };\n    /**\n     * Helper function for legacy browsers and iframes which sometimes focus\n     * elements like document, body, and non-interactive SVG.\n     * @param {Element} el\n     */\n\n    function isValidFocusTarget(el) {\n      if (el && el !== document && el.nodeName !== 'HTML' && el.nodeName !== 'BODY' && 'classList' in el && 'contains' in el.classList) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Computes whether the given element should automatically trigger the\n     * `focus-visible` class being added, i.e. whether it should always match\n     * `:focus-visible` when focused.\n     * @param {Element} el\n     * @return {boolean}\n     */\n\n\n    function focusTriggersKeyboardModality(el) {\n      var type = el.type;\n      var tagName = el.tagName;\n\n      if (tagName === 'INPUT' && inputTypesWhitelist[type] && !el.readOnly) {\n        return true;\n      }\n\n      if (tagName === 'TEXTAREA' && !el.readOnly) {\n        return true;\n      }\n\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Add the `focus-visible` class to the given element if it was not added by\n     * the author.\n     * @param {Element} el\n     */\n\n\n    function addFocusVisibleClass(el) {\n      if (el.classList.contains('focus-visible')) {\n        return;\n      }\n\n      el.classList.add('focus-visible');\n      el.setAttribute('data-focus-visible-added', '');\n    }\n    /**\n     * Remove the `focus-visible` class from the given element if it was not\n     * originally added by the author.\n     * @param {Element} el\n     */\n\n\n    function removeFocusVisibleClass(el) {\n      if (!el.hasAttribute('data-focus-visible-added')) {\n        return;\n      }\n\n      el.classList.remove('focus-visible');\n      el.removeAttribute('data-focus-visible-added');\n    }\n    /**\n     * If the most recent user interaction was via the keyboard;\n     * and the key press did not include a meta, alt/option, or control key;\n     * then the modality is keyboard. Otherwise, the modality is not keyboard.\n     * Apply `focus-visible` to any current active element and keep track\n     * of our keyboard modality state with `hadKeyboardEvent`.\n     * @param {KeyboardEvent} e\n     */\n\n\n    function onKeyDown(e) {\n      if (e.metaKey || e.altKey || e.ctrlKey) {\n        return;\n      }\n\n      if (isValidFocusTarget(scope.activeElement)) {\n        addFocusVisibleClass(scope.activeElement);\n      }\n\n      hadKeyboardEvent = true;\n    }\n    /**\n     * If at any point a user clicks with a pointing device, ensure that we change\n     * the modality away from keyboard.\n     * This avoids the situation where a user presses a key on an already focused\n     * element, and then clicks on a different element, focusing it with a\n     * pointing device, while we still think we're in keyboard modality.\n     * @param {Event} e\n     */\n\n\n    function onPointerDown(e) {\n      hadKeyboardEvent = false;\n    }\n    /**\n     * On `focus`, add the `focus-visible` class to the target if:\n     * - the target received focus as a result of keyboard navigation, or\n     * - the event target is an element that will likely require interaction\n     *   via the keyboard (e.g. a text box)\n     * @param {Event} e\n     */\n\n\n    function onFocus(e) {\n      // Prevent IE from focusing the document or HTML element.\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n\n      if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {\n        addFocusVisibleClass(e.target);\n      }\n    }\n    /**\n     * On `blur`, remove the `focus-visible` class from the target.\n     * @param {Event} e\n     */\n\n\n    function onBlur(e) {\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n\n      if (e.target.classList.contains('focus-visible') || e.target.hasAttribute('data-focus-visible-added')) {\n        // To detect a tab/window switch, we look for a blur event followed\n        // rapidly by a visibility change.\n        // If we don't see a visibility change within 100ms, it's probably a\n        // regular focus change.\n        hadFocusVisibleRecently = true;\n        window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n        hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {\n          hadFocusVisibleRecently = false;\n        }, 100);\n        removeFocusVisibleClass(e.target);\n      }\n    }\n    /**\n     * If the user changes tabs, keep track of whether or not the previously\n     * focused element had .focus-visible.\n     * @param {Event} e\n     */\n\n\n    function onVisibilityChange(e) {\n      if (document.visibilityState === 'hidden') {\n        // If the tab becomes active again, the browser will handle calling focus\n        // on the element (Safari actually calls it twice).\n        // If this tab change caused a blur on an element with focus-visible,\n        // re-apply the class when the user switches back to the tab.\n        if (hadFocusVisibleRecently) {\n          hadKeyboardEvent = true;\n        }\n\n        addInitialPointerMoveListeners();\n      }\n    }\n    /**\n     * Add a group of listeners to detect usage of any pointing devices.\n     * These listeners will be added when the polyfill first loads, and anytime\n     * the window is blurred, so that they are active when the window regains\n     * focus.\n     */\n\n\n    function addInitialPointerMoveListeners() {\n      document.addEventListener('mousemove', onInitialPointerMove);\n      document.addEventListener('mousedown', onInitialPointerMove);\n      document.addEventListener('mouseup', onInitialPointerMove);\n      document.addEventListener('pointermove', onInitialPointerMove);\n      document.addEventListener('pointerdown', onInitialPointerMove);\n      document.addEventListener('pointerup', onInitialPointerMove);\n      document.addEventListener('touchmove', onInitialPointerMove);\n      document.addEventListener('touchstart', onInitialPointerMove);\n      document.addEventListener('touchend', onInitialPointerMove);\n    }\n\n    function removeInitialPointerMoveListeners() {\n      document.removeEventListener('mousemove', onInitialPointerMove);\n      document.removeEventListener('mousedown', onInitialPointerMove);\n      document.removeEventListener('mouseup', onInitialPointerMove);\n      document.removeEventListener('pointermove', onInitialPointerMove);\n      document.removeEventListener('pointerdown', onInitialPointerMove);\n      document.removeEventListener('pointerup', onInitialPointerMove);\n      document.removeEventListener('touchmove', onInitialPointerMove);\n      document.removeEventListener('touchstart', onInitialPointerMove);\n      document.removeEventListener('touchend', onInitialPointerMove);\n    }\n    /**\n     * When the polfyill first loads, assume the user is in keyboard modality.\n     * If any event is received from a pointing device (e.g. mouse, pointer,\n     * touch), turn off keyboard modality.\n     * This accounts for situations where focus enters the page from the URL bar.\n     * @param {Event} e\n     */\n\n\n    function onInitialPointerMove(e) {\n      // Work around a Safari quirk that fires a mousemove on <html> whenever the\n      // window blurs, even if you're tabbing out of the page. ¯\\_(ツ)_/¯\n      if (e.target.nodeName && e.target.nodeName.toLowerCase() === 'html') {\n        return;\n      }\n\n      hadKeyboardEvent = false;\n      removeInitialPointerMoveListeners();\n    } // For some kinds of state, we are interested in changes at the global scope\n    // only. For example, global pointer input, global key presses and global\n    // visibility change should affect the state at every scope:\n\n\n    document.addEventListener('keydown', onKeyDown, true);\n    document.addEventListener('mousedown', onPointerDown, true);\n    document.addEventListener('pointerdown', onPointerDown, true);\n    document.addEventListener('touchstart', onPointerDown, true);\n    document.addEventListener('visibilitychange', onVisibilityChange, true);\n    addInitialPointerMoveListeners(); // For focus and blur, we specifically care about state changes in the local\n    // scope. This is because focus / blur events that originate from within a\n    // shadow root are not re-dispatched from the host element if it was already\n    // the active element in its own scope:\n\n    scope.addEventListener('focus', onFocus, true);\n    scope.addEventListener('blur', onBlur, true); // We detect that a node is a ShadowRoot by ensuring that it is a\n    // DocumentFragment and also has a host property. This check covers native\n    // implementation and polyfill implementation transparently. If we only cared\n    // about the native implementation, we could just check if the scope was\n    // an instance of a ShadowRoot.\n\n    if (scope.nodeType === Node.DOCUMENT_FRAGMENT_NODE && scope.host) {\n      // Since a ShadowRoot is a special kind of DocumentFragment, it does not\n      // have a root element to add a class to. So, we add this attribute to the\n      // host element instead:\n      scope.host.setAttribute('data-js-focus-visible', '');\n    } else if (scope.nodeType === Node.DOCUMENT_NODE) {\n      document.documentElement.classList.add('js-focus-visible');\n      document.documentElement.setAttribute('data-js-focus-visible', '');\n    }\n  } // It is important to wrap all references to global window and document in\n  // these checks to support server-side rendering use cases\n  // @see https://github.com/WICG/focus-visible/issues/199\n\n\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    // Make the polyfill helper globally available. This can be used as a signal\n    // to interested libraries that wish to coordinate with the polyfill for e.g.,\n    // applying the polyfill to a shadow root:\n    window.applyFocusVisiblePolyfill = applyFocusVisiblePolyfill; // Notify interested libraries of the polyfill's presence, in case the\n    // polyfill was loaded lazily:\n\n    var event;\n\n    try {\n      event = new CustomEvent('focus-visible-polyfill-ready');\n    } catch (error) {\n      // IE11 does not support using CustomEvent as a constructor directly:\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent('focus-visible-polyfill-ready', false, false, {});\n    }\n\n    window.dispatchEvent(event);\n  }\n\n  if (typeof document !== 'undefined') {\n    // Apply the polyfill to the global document, so that no JavaScript\n    // coordination is required to use the polyfill in the top-level document:\n    applyFocusVisiblePolyfill(document);\n  }\n});"],"sourceRoot":""}